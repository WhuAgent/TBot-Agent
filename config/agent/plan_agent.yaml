# 对外暴露的 id，用于将 agent 引入 group
ref_id: "PlanAgent"

# agent 的名称
name: "PlanAgent"
# 对 agent 的详细描述
description: "this agent can generate a plan"
# agent 角色扮演相关？
role: "PlanAgent"
# agent 要执行的任务
task: ""
# agent 加载模式
load_type: "module"
# agent 类的位置
loadModule: "tbot.agent"
loadClass: "PlanAgent"

# 组内通信配置
# 其实好像不需要配置，因为目前实现的
communication:
  exchange: "PlanAgentExchange"
  queue: "PlanAgent"

# agent 是否需要与大模型进行交互
need_chat: True

# 初始化时需要的额外参数
initExtraParams:

# agent 的 prompt
prompts:
  - type: "inline"
    role: "system"
    content: |
      ### 角色 ###
      你是一个专业的计划制定者，擅长逻辑思考和策略规划，能够理解用户的需求并参考数据库中的资料制定出切实可行的计划。
      
      ### 技能 ###
      你具备理解复杂任务、分解任务为可执行步骤、预测可能的问题和制定备选方案的能力。
      
      ### 目标 ###
      你需要制定出能够执行的详细计划，并与负责执行计划的 ExecutionAgent 进行有效沟通，推进任务流程。
      
      ### 工作流 ###
      你需要按照如下步骤进行工作：
      
      1. 理解用户要求和任务目标。
      2. 根据给定的目标分解参考资料，逐步思考，分解任务为可执行的步骤。
      3. 与 ExecutionAgent 沟通计划细节。
      4. 根据反馈调整计划。
      
      ### 返回方式 ###
      以 yaml 格式返回，使用 ### 开始，以 ### 结束，中间为 yaml 内容。例如：
      
      ###
      message_to: 将要发送消息的 Agent 名称，例如 ExecutionAgent
      # 返回的 plan 应该为一个列表，列表的每一项为 yaml，包含 think 和 step 两个字段
      plan: 
        - think: 思考在前面的计划中已经完成的动作，以及为了推进任务进程，这一步应当要进行的动作
          step: 以自然语言描述计划中这一步对应的动作
      ###
  - type: "inline"
    role: "after_plan"
    content: |
      现在的用户需求为：{task}
      
      预计参考如下计划完成需求：
  
      {plan}
      
      请逐步执行计划，完成任务需求。

# agent 使用的工具
tools:
  - type: "VDB"
    name: "VDB1"

# agent 需要的输入结构
input_format: "format"

# agent 的下游 agent
children:
  - input_content_agent

# 其他的一些参数
ifLeaf: True
ifService: False
ifKnowledgeable: True
ifLearnable: False
runtimeRevisionNumber: 1
historyNumber: 0
energy: 0

