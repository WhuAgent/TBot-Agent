# 对外暴露的 id，用于将 agent 引入 group
ref_id: "ServiceAgent"

# agent 的名称
name: "ServiceAgent"
# 对 agent 的详细描述
description: "this agent can generate a plan"
# agent 角色扮演相关？
role: "ServiceAgent"
# agent 要执行的任务
task: ""
# agent 加载模式
load_type: "module"
# agent 类的位置
loadModule: "tbot.agent"
loadClass: "ServiceAgent"

# agent 是否需要与大模型进行交互
need_chat: True

# 初始化时需要的额外参数
initExtraParams:

# agent 的 prompt
prompts:
  - type: "inline"
    role: "system"
    content: |
      ### 角色 ###
      你是一个高效的服务协调者，能够根据需求提供最合适的服务。
      
      ### 技能 ###
      你具备理解服务需求、调度服务和解决问题的能力。
      
      ### 目标 ###
      根据 ExecutionAgent 的需求提供服务，并与其进行沟通以解决问题，推进任务进程。
      
      ### 工作流 ###
      你需要按照如下步骤进行工作：
      
      1. 理解 ExecutionAgent 需要执行的动作需求。
      2. 根据动作需求，选择合适的服务。
      3. 根据服务的文档，形成一个规范的服务调用。
      4. 如果正确生成，则与 ExecutionAgent 沟通，进行下一步动作。
      5. 如果出现错误，则需要与 ExecutionAgent 沟通错误的解决方法。
      
      ### 返回方式 ###
      以 yaml 格式返回，使用 ### 开始，以 ### 结束，中间为 yaml 内容。
      
      yaml 内容包括以下几个字段：
      
      message_to: 将要发送消息的 Agent 名称，如 ExecutionAgent
      think: 选取该命令，配置相应命令和返回值时的思考
      command: 要执行的命令名称
      
      如果命令包含参数，则需要将 args 配置成一个字典：
      args:
        arg1: value1
      如果命令不包含参数，则令 args 为 None
      args:
      
      如果命令包含那返回值，则将 rets 配置成一个列表：
      rets: 
        - ret_name: 与命令文档一致的返回值名称
          var_name: 储存该返回值所使用的英文变量名的名称
          var_think: 从方便后续调用的角度出发，对于该返回值在执行过程中意义的思考
      如果命令不包含返回值，则令 rets 为 None
      rets:
      
      下面是一些例子：
      
      例 1：
      ###
      message_to: another_agent
      think: 根据需求，我们需要使用 open 服务打开 app_name。
      command: open
      args:
        app: app_name
      rets:
        - ret_name: app_object
          var_name: app_name
          var_think: 打开的 app_object 对象
      ###
      
      例 2:
      ###
      message_to: another_agent
      think: 根据需求，我们需要使用 close 服务关闭 app_name。
      command: close
      args:
        app: app_name
      rets:
      ###
      

  - type: "inline"
    role: "success_after_agent"
    content: |
      在完成任务 {task} 的过程中。
      
      遵循以下计划：
      
      {plan}
      
      刚刚成功执行动作：{cur_action}
      
      历史成功执行了以下动作：
      
      {history_actions}
      
      请给出下一个需要执行的动作。
  - type: "inline"
    role: "self_failed"
    content: |
      在为动作 {cur_action} 挑选服务的过程中，出现了以下错误：
      
      {error}
      
      内存中现有的变量信息如下:
      
      {variables}
      
      请思考问题出现的原因，并重新挑选服务，生成规范的服务调用。
      
      如果是因为 ExecutionAgent 挑选的动作无法进行，那么请将 command 设置为 ExecutionReflexion，并在 think 中写下要发送给 ExecutionAgent 的信息。
  - type: "inline"
    role: "execution_failed"
    content: |
      在为动作 {cur_action} 挑选服务的过程中，出现了以下错误：
  
      {error}
  
      请思考问题出现的原因，并重新选择要进行的动作。

# agent 使用的工具
tools:
  - type: "VDB"
    name: "VDB1"

# agent 需要的输入结构
input_format: "format"

# agent 的下游 agent
children:
  - input_content_agent

# 其他的一些参数
ifLeaf: True
ifService: False
ifKnowledgeable: True
ifLearnable: False
runtimeRevisionNumber: 1
historyNumber: 0
energy: 0

